/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package jpanels;

/**
 *
 * @author edenj
 */
public class JPanelDashBoard extends javax.swing.JPanel {

    private final listas.ListaDoblementeLigadaCircular lista = listas.ListManager.lista;
    private listas.Nodo asignaturaNodo;
    private javax.swing.JFrame window;

    /**
     * Creates new form JPanelDashBoard
     *
     * @param window JFrame con la ventana Principal.
     */
    public JPanelDashBoard(javax.swing.JFrame window) {
        this.window = window;
        initComponents();
        moreConfiguration();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxSignatures = new javax.swing.JComboBox<>();
        jLabelAsignaturas = new javax.swing.JLabel();
        jComboBoxDays = new javax.swing.JComboBox<>();
        jSpinnerHoraInicio = new javax.swing.JSpinner();
        jLabelHoraInicio = new javax.swing.JLabel();
        jSpinnerHoraFinal = new javax.swing.JSpinner();
        jLabelHoraFinal = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jLabelShowDiary = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jTextFieldNombreAsignatura = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxSignatures.setBorder(null);
        jComboBoxSignatures.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSignaturesItemStateChanged(evt);
            }
        });
        add(jComboBoxSignatures, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 220, 30));

        jLabelAsignaturas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAsignaturas.setText("Asignaturas ( CLAVE )");
        add(jLabelAsignaturas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 548, -1));

        jComboBoxDays.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo" }));
        jComboBoxDays.setBorder(null);
        add(jComboBoxDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 130, 290, 30));

        jSpinnerHoraInicio.setModel(new javax.swing.SpinnerNumberModel(7, 7, 19, 1));
        jSpinnerHoraInicio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerHoraInicioStateChanged(evt);
            }
        });
        add(jSpinnerHoraInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 60, 40));

        jLabelHoraInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHoraInicio.setText("Hora de Inicio");
        add(jLabelHoraInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 530, -1));

        jSpinnerHoraFinal.setModel(new javax.swing.SpinnerNumberModel(8, 8, 20, 1));
        add(jSpinnerHoraFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, 60, 40));

        jLabelHoraFinal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHoraFinal.setText("Hora Final");
        add(jLabelHoraFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 530, -1));

        jButtonDelete.setText("Eliminar Horario");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 170, 40));

        jLabelShowDiary.setBackground(new java.awt.Color(0, 0, 0));
        jLabelShowDiary.setForeground(new java.awt.Color(255, 255, 255));
        jLabelShowDiary.setName(""); // NOI18N
        jLabelShowDiary.setPreferredSize(new java.awt.Dimension(50, 50));
        jLabelShowDiary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelShowDiaryMouseClicked(evt);
            }
        });
        add(jLabelShowDiary, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));

        jButtonAdd.setText("Agregar Horario");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 170, 40));

        jTextFieldNombreAsignatura.setEditable(false);
        jTextFieldNombreAsignatura.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        add(jTextFieldNombreAsignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 170, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        String dia = "" + this.jComboBoxDays.getSelectedItem();
        listas.Nodo nodo = this.lista.eliminaAbajo(this.asignaturaNodo, dia);
        if (nodo != null) {
            tools.JOPaneMessages.exito(this, "Horario Eliminado Con Éxito");
        } else {
            tools.JOPaneMessages.error(this, "Error en la Eliminación");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jLabelShowDiaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelShowDiaryMouseClicked
        if (this.asignaturaNodo != null) {
            if (this.asignaturaNodo.getAbajo() != null) {
                listas.Nodo aux = asignaturaNodo.getAbajo();
                String data = "";
                do {
                    models.Diary diary = (models.Diary) aux.getObj();
                    data += "-> " + aux.getEtiqueta() + "\n" + diary.desp("--- ");
                    aux = aux.getSiguiente();
                } while (aux != this.asignaturaNodo.getAbajo());
                tools.JOPaneMessages.exito(this, data, "Horarios de la Asignatura");
            } else {
                tools.JOPaneMessages.error(this, "No hay horarios registrados");
            }
        }
    }//GEN-LAST:event_jLabelShowDiaryMouseClicked

    private void jSpinnerHoraInicioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerHoraInicioStateChanged
        int horaInicio = (int) this.jSpinnerHoraInicio.getValue();
        int horaFin = (int) this.jSpinnerHoraFinal.getValue();
        if (horaInicio >= horaFin) {
            this.jSpinnerHoraFinal.setValue(horaInicio + 1);
        }
    }//GEN-LAST:event_jSpinnerHoraInicioStateChanged

    private void jComboBoxSignaturesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSignaturesItemStateChanged
        String asignatura = "" + this.jComboBoxSignatures.getSelectedItem();
        this.asignaturaNodo = listas.ListManager.lista.buscar(asignatura);
        if (this.asignaturaNodo != null) {
            if (this.asignaturaNodo.getObj() instanceof models.Subject subject) {
                this.jTextFieldNombreAsignatura.setText(subject.getAsignatura());
            }
        }
    }//GEN-LAST:event_jComboBoxSignaturesItemStateChanged

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String dia = "" + this.jComboBoxDays.getSelectedItem();
        int horaInicio = Integer.parseInt("" + this.jSpinnerHoraInicio.getValue());
        int horaFinal = Integer.parseInt("" + this.jSpinnerHoraFinal.getValue());
        if (horaFinal > horaInicio) {
            listas.Nodo horario = new listas.Nodo(dia, new models.Diary(horaInicio, horaFinal));
            if (asignaturaNodo != null) {
                this.lista.insertaAbajo(this.asignaturaNodo, horario, true);
                tools.JOPaneMessages.exito(this, "Horario Establecido con éxito");
            } else {
                tools.JOPaneMessages.error(this, "Error");
            }
        } else {
            tools.JOPaneMessages.error(this, "La Hora de Inicio debe ser Menor a la Hora de Inicio");
        }
    }//GEN-LAST:event_jButtonAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JComboBox<String> jComboBoxDays;
    private javax.swing.JComboBox<String> jComboBoxSignatures;
    private javax.swing.JLabel jLabelAsignaturas;
    private javax.swing.JLabel jLabelHoraFinal;
    private javax.swing.JLabel jLabelHoraInicio;
    private javax.swing.JLabel jLabelShowDiary;
    private javax.swing.JSpinner jSpinnerHoraFinal;
    private javax.swing.JSpinner jSpinnerHoraInicio;
    private javax.swing.JTextField jTextFieldNombreAsignatura;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que nos permite configurar más cosas del JPanel despues de
     * inicializar sus elementos.
     */
    private void moreConfiguration() {
        //Set Background
        this.setBackground(tools.RootVariables.backgroundDefault);
        //Set Fonts
        this.jLabelAsignaturas.setFont(tools.RootVariables.fontMenu);
        this.jLabelHoraInicio.setFont(tools.RootVariables.fontMenu);
        this.jLabelHoraFinal.setFont(tools.RootVariables.fontMenu);

        this.jTextFieldNombreAsignatura.setFont(tools.RootVariables.fontMenu);

        this.jComboBoxSignatures.setFont(tools.RootVariables.fontMenu);
        this.jComboBoxDays.setFont(tools.RootVariables.fontMenu);

        this.jSpinnerHoraFinal.setFont(tools.RootVariables.fontMenu);
        this.jSpinnerHoraInicio.setFont(tools.RootVariables.fontMenu);

        this.jButtonDelete.setFont(tools.RootVariables.fontMenu);
        this.jButtonAdd.setFont(tools.RootVariables.fontMenu);

        //Set Icon
        this.jLabelShowDiary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/show.png")));

        //this.jComboBoxDays.getEditor().getEditorComponent().setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
        javax.swing.DefaultListCellRenderer listRenderer = new javax.swing.DefaultListCellRenderer();
        listRenderer.setHorizontalAlignment(0);
        this.jComboBoxDays.setRenderer(listRenderer);
        this.jComboBoxSignatures.setRenderer(listRenderer);
        ((javax.swing.JSpinner.DefaultEditor) this.jSpinnerHoraFinal.getEditor()).getTextField().setHorizontalAlignment(0);
        ((javax.swing.JSpinner.DefaultEditor) this.jSpinnerHoraInicio.getEditor()).getTextField().setHorizontalAlignment(0);
        //RefreshComboBox
        this.refreshComboBox();
    }

    /**
     * Método que nos permite refrescar el JComboBox con los nodos de la lista.
     */
    public void refreshComboBox() {
        //Add Signatures to JComboBox
        this.jComboBoxSignatures.removeAllItems();
        listas.ListManager.agregarAComboBox(this.lista.getPrimero(), jComboBoxSignatures);
        if (this.jComboBoxSignatures.getItemCount() > 0) {
            tools.Interfaz.setEnabled(true, this.jButtonAdd, this.jButtonDelete, this.jSpinnerHoraInicio, this.jSpinnerHoraFinal, this.jComboBoxDays, this.jComboBoxSignatures, this.jLabelShowDiary);
        } else {
            this.jComboBoxSignatures.addItem("No hay elementos");
            tools.Interfaz.setEnabled(false, this.jButtonAdd, this.jButtonDelete, this.jSpinnerHoraInicio, this.jSpinnerHoraFinal, this.jComboBoxDays, this.jComboBoxSignatures, this.jLabelShowDiary);
        }
    }
}
